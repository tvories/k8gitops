---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-05-27T19-17-46Z
            args:
              - server
              - /data
              - --console-address
              - :9001
            env:
              TZ: ${TIMEZONE}
              MINIO_UPDATE: "off"
              MINIO_BROWSER_REDIRECT_URL: https://minio.nas.${SECRET_DOMAIN}
              MINIO_SERVER_URL: https://s3.nas.${SECRET_DOMAIN}
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.nas.${SECRET_DOMAIN},https://s3.nas.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: minio-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 128M
                cpu: 5m
              limits:
                memory: 1500Mi
            securityContext:
              privileged: true
              runAsUser: 0
    service:
      main:
        ports:
          http:
            port: 9001
          s3:
            port: 9000

    ingress:
      main:
        enabled: true
        hosts:
          - host: "{{ .Release.Name }}.nas.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  port: http
                  name: main
          - host: &api-host s3.nas.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: s3
                  name: main

    persistence:
      data:
        type: hostPath
        hostPath: /ook/minio/
        hostPathType: Directory
        globalMounts:
          - path: /data
