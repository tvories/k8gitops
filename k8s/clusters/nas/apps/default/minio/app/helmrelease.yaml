---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      podSecurityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [100]
    controllers:
      main:
        enabled: true
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2023-01-25T00-19-54Z
            env:
              TZ: ${TIMEZONE}
              MINIO_UPDATE: "off"
              # MINIO_PROMETHEUS_URL: https://prometheus.holthome.net
              # MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_BROWSER_REDIRECT_URL: https://minio.nas.${SECRET_DOMAIN}
              MINIO_SERVER_URL: https://s3.nas.${SECRET_DOMAIN}
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.nas.${SECRET_DOMAIN},https://s3.nas.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        controller: main
        enabled: true
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: &api-port 9000
    serviceMonitor:
      main:
        enabled: false
        # endpoints:
        #   - port: api
        #     scheme: http
        #     path: /minio/v2/metrics/cluster
        #     interval: 1m
        #     scrapeTimeout: 10s
        #     bearerTokenSecret:
        #       name: minio-secret
        #       key: MINIO_PROMETHEUS_TOKEN

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &console-host "{{ .Release.Name }}.nas.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *console-port
                  name: main
        tls:
          - hosts:
              - *console-host
            secretName: tls.minio
      s3:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &api-host s3.nas.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 9000
                  name: main
        tls:
          - hosts:
              - *api-host
            secretName: tls.s3

    persistence:
      data:
        enabled: true
        type: hostPath
        hostPath: /ook/minio/
        globalMounts:
          - path: /data
            hostPathType: Directory
            mountPath: /data
            readOnly: false
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
