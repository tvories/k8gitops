# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        # fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.19.0.4568@sha256:59a1b3f3f5df0f0d112a338d8b155737736ae506aaf2f227fa8bdf54b1bd634d
            env:
              TZ: "${TIMEZONE}"
              PROWLARR__INSTANCE_NAME: Prowlarr
              # PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__THEME: dark

            envFrom: *envFrom
            resources:
              requests:
                cpu: 11m
                memory: 127M
              limits:
                memory: 508M

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 9696

    ingress:
      app:
        enabled: true
        className: "nginx-internal"
        # annotations:
        #   cert-manager.io/cluster-issuer: letsencrypt-production
        #   nginx.ingress.kubernetes.io/configuration-snippet: |
        #     proxy_set_header Accept-Encoding "";
        #     sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/prowlarr/nord.css"></head>';
        #     sub_filter_once on;
        hosts:
          - host: &host "prowlarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: tls.prowlarr
            hosts:
              - *host

    # probes:
    #   liveness: &probes
    #     enabled: true
    #     custom: true
    #     spec:
    #       httpGet:
    #         path: /ping
    #         port: *port
    #       initialDelaySeconds: 0
    #       periodSeconds: 10
    #       timeoutSeconds: 1
    #       failureThreshold: 3
    #   readiness: *probes
    #   startup:
    #     enabled: false

    persistence:
      config:
        enabled: true
        # existingClaim: prowlarr-config
        type: emptyDir
        # mountPath: /config
    # shared:
    #   enabled: true
    #   type: emptyDir
    #   mountPath: /shared
    backup:
      enabled: true
      existingClaim: prowlarr-nfs-backup
      globalMounts:
        - path: /config/Backups
