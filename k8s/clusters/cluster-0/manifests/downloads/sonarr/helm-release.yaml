---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:16.1
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: sonarr-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.1.1014@sha256:3e08e731857baadc834f129b1da836e5740133ad539a7b560173b7297222abf3

    env:
      TZ: "${TIMEZONE}"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__LOG_LEVEL: info
      SONARR__THEME: dark

    envFrom: *envFrom

    service:
      main:
        ports:
          http:
            port: &port 8989

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx-internal"
        annotations:
          # cert-manager.io/cluster-issuer: letsencrypt-production
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   proxy_set_header Accept-Encoding "";
          #   sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/sonarr/plex.css"></head>';
          #   sub_filter_once on;
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *host
            secretName: &tls tls.sonarr

      api:
        enabled: true
        ingressClassName: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *tls

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 65539
        - 10000

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      media:
        enabled: true
        existingClaim: downloads-nfs-media
        mountPath: /media
      backup:
        enabled: true
        existingClaim: sonarr-nfs-backup
        mountPath: /config/Backups
    resources:
      requests:
        cpu: 23m
        memory: 273M
      limits:
        memory: 728M

    # metrics:
    #   enabled: true
    #   serviceMonitor:
    #     interval: 3m
    #     scrapeTimeout: 1m
    #   prometheusRule:
    #     enabled: true
    #   exporter:
    #     image:
    #       repository: ghcr.io/onedr0p/exportarr
    #       tag: v1.5.3
    #     env:
    #       port: 9794
    #       additionalMetrics: true
    #       unknownQueueItems: true
