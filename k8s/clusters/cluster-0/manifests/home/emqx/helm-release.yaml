---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: emqx
  namespace: home
spec:
  interval: 5m
  releaseName: emqx
  chart:
    spec:
      chart: emqx
      version: 4.4.19
      sourceRef:
        kind: HelmRepository
        name: emqx-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: emqx/emqx
      ref: 4.3.5
      pullPolicy: IfNotPresent
      pullSecrets:
        - regcred
    replicaCount: 3
    recreatePods: true

    service:
      type: LoadBalancer
      loadBalancerIP: "${EMQX_EXTERNAL_IP}"
      # externalIPs:
      #   # - "${EMQX_EXTERNAL_IP}"
      #   - "192.168.81.40"
    ingress:
      dashboard:
        enabled: false
        ingressClassName: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        path: /
        hosts:
        - emqx.${SECRET_DOMAIN}
        tls:
        - hosts:
          - emqx.${SECRET_DOMAIN}
          secretName: tls.emqx
    emqxConfig:
      EMQX_ALLOW_ANONYMOUS: "false"
      EMQX_ADMIN_PASSWORD: "${SECRET_EMQX_ADMIN_PASSWORD}"
      EMQX_AUTH__MNESIA__PASSWORD_HASH: plain
      EMQX_AUTH__USER__1__USERNAME: "${ZIGBEE2MQTT_MQTT_USER}"
      EMQX_AUTH__USER__1__PASSWORD: "${ZIGBEE2MQTT_MQTT_PASSWORD}"
      EMQX_AUTH__USER__2__USERNAME: "${SECRET_HA_MQTT_USER}"
      EMQX_AUTH__USER__2__PASSWORD: "${SECRET_HA_MQTT_PASSWORD}"
      EMQX_AUTH__USER__3__USERNAME: "${SECRET_ZWAVEJS2MQTT_MQTT_USER}"
      EMQX_AUTH__USER__3__PASSWORD: "${SECRET_ZWAVEJS2MQTT_MQTT_PASSWORD}"
      EMQX_AUTH__USER__4__USERNAME: "${SECRET_FRIGATE_MQTT_USER}"
      EMQX_AUTH__USER__4__PASSWORD: "${SECRET_FRIGATE_MQTT_PASSWORD}"
      EMQX_AUTH__USER__5__USERNAME: "${SECRET_AMCREST_MQTT_USER}"
      EMQX_AUTH__USER__5__PASSWORD: "${SECRET_AMCREST_MQTT_PASSWORD}"
    emqxAclConfig: >
      {allow, {user, "dashboard"}, subscribe, ["$SYS/#"]}.
      {allow, {ipaddr, "127.0.0.1"}, pubsub, ["$SYS/#", "#"]}.
      {allow, all, subscribe, ["$SYS/#", {eq, "#"}]}.
      {allow, all}.
    emqxLoadedPlugins: >
      {emqx_management, true}.
      {emqx_recon, true}.
      {emqx_retainer, true}.
      {emqx_dashboard, true}.
      {emqx_telemetry, false}.
      {emqx_rule_engine, true}.
      {emqx_bridge_mqtt, false}.
      {emqx_auth_mnesia, true}.
      {emqx_prometheus, true}.
    emqxLoadedModules: >
      {emqx_mod_presence, true}.
      {emqx_mod_delayed, false}.
      {emqx_mod_rewrite, false}.
      {emqx_mod_subscription, false}.
      {emqx_mod_topic_metrics, true}.
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - emqx
              # - kube-vip
          topologyKey: "kubernetes.io/hostname"
    resources:
      requests:
        cpu: 23m
        memory: 204M
      limits:
        memory: 512Mi
  # postRenderers:
  # - kustomize:
  #     patchesJson6902:
      # - target:
      #     kind: Ingress
      #     name: emqx-dashboard
      #   patch:
      #   - op: add
      #     path: /spec/ingressClassName
      #     value: traefik
      # - target:
      #     kind: Service
      #     name: emqx
        # patch:
        # - op: remove
        #   path: /spec/loadBalancerIP
        # - op: add
        #   path: /spec/externalIPs
        #   value:
        #   - "${EMQX_EXTERNAL_IP}"
