---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  releaseName: home-assistant
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 1
  upgrade:
    remediation:
      retries: 1
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        pod:
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-db:
            image: ghcr.io/onedr0p/postgres-init:14.9
            imagePullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: home-assistant-secret
        containers:
          main:
            image:
              repository: homeassistant/home-assistant
              tag: 2023.10.3

            env:
              TZ: "${TIMEZONE}"
              POSTGRES_HOST: postgres-rw.database.svc.cluster.local
              POSTGRES_DB: hass
            envFrom:
              - secretRef:
                  name: home-assistant-secret
            resources:
              requests:
                cpu: 109m
                memory: 588M

          codeserver:
            enabled: true
            image:
              repository: ghcr.io/coder/code-server
              tag: ghcr.io/coder/code-server
            workingDir: "/config"
            env:
              password: ${SECRET_CODESERVER_PASSWORD}
              TZ: "${TIMEZONE}"
              HASS_SERVER: http://localhost:8123
            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
            volumeMounts:
              - name: config
                mountPath: /config
            resources:
              requests:
                cpu: 11m
                memory: 94M

          matterserver:
            enabled: true
            image:
              repository: ghcr.io/home-assistant-libs/python-matter-server
              tag: 4.0.0b0
            workingDir: "/matter_data"
            env:
              TZ: "${TIMEZONE}"
            volumeMounts:
              - name: data
                mountPath: /matter_data
            resources:
              requests:
                cpu: 20m
                memory: 100M
            securityContext:
              appArmor: "unconfirmed"

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_HOMEASSISTANT}"
        externalTrafficPolicy: Cluster
        # loadBalancerIP: "${LB_HOMEASSISTANT}"
        ports:
          http:
            port: 8123
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
      codeserver:
        type: ClusterIP
        controller: main
        ports:
          http:
            enabled: true
            port: 12321
            protocol: TCP
            targetPort: 12321
      matterserver:
        type: ClusterIP
        controller: main
        ports:
          ws:
            enabled: true
            port: 5580
            protocol: TCP
            targetPort: 5580

    ingress:
      main:
        enabled: true
        ingressClassName: nginx-external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
          nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Real-IP, X-Frame-Options, X-Content-Type-Options, X-Forwarded-Proto"
        hosts:
          - host: &host "ha.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - secretName: tls.homeassistant
            hosts:
              - *host

      codeserver:
        enabled: true
        ingressClassName: "nginx-internal"
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &vscodehost "ha-vscode.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: codeserver
                  port: http
        tls:
          - secretName: tls.ha-vscode
            hosts:
              - *vscodehost

    persistence:
      config:
        enabled: true
        existingClaim: homeassistant-config
