---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pod-gateway
  namespace: vpn
spec:
  interval: 5m
  chart:
    spec:
      chart: pod-gateway
      version: 6.0.0
      sourceRef:
        kind: HelmRepository
        name: angelnu-helm-charts
        namespace: flux-system
      interval: 15m
  values:
    image:
      repository: ghcr.io/angelnu/pod-gateway
      tag: v1.8.1

    webhook:
      image:
        repository: ghcr.io/angelnu/gateway-admision-controller
        # Use dev version
        pullPolicy: Always
        tag: v3.7.0

    addons:
      netshoot:
        enabled: true
      vpn:
        enabled: true
        type: gluetun
        gluetun:
          image:
            repository:
              repository: docker.io/qmcgaw/gluetun
              tag: v3.32.0
        env:
          - name: VPN_SERVICE_PROVIDER
            value: mullvad
          - name: VPN_TYPE
            value: wireguard
          - name: VPN_INTERFACE
            value: wg0
          - name: FIREWALL
            value: "off"
          - name: DOT
            value: "off"
          # - name:  WIREGUARD_PRIVATE_KEY
          #   value: set in secret
          # - name:  WIREGUARD_PRESHARED_KEY
          #   value: set in secret
          # - name:  WIREGUARD_ADDRESSES
          #   value: set in secret
          # - name:  SERVER_COUNTRIES
          #   value: set in secret

        envFrom:
          - secretRef:
              name: pod-gateway-vpnconfig

        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - if [ $(wget -q -O- https://ipinfo.io/country) == '${VPN_COUNTRY}' ]; then exit 0; else exit $?; fi
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 3

        networkPolicy:
          enabled: true

          egress:
            - to:
                - ipBlock:
                    cidr: 0.0.0.0/0
              ports:
                # VPN traffic
                - port: "${VPN_PORT}"
                  protocol: UDP
            - to:
                - ipBlock:
                    cidr: 10.0.0.0/8

    routed_namespaces:
      - downloads

    settings:
      # -- If using a VPN, interface name created by it
      VPN_INTERFACE: wg0
      # -- Prevent non VPN traffic to leave the gateway
      VPN_BLOCK_OTHER_TRAFFIC: true
      # -- If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
      VPN_TRAFFIC_PORT: "${VPN_PORT}"
      # -- Traffic to these IPs will be send through the K8S gateway
      VPN_LOCAL_CIDRS: "172.16.0.0/12 ${NETWORK_K8S_POD_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${NETWORK_MANAGEMENT_CIDR} ${NETWORK_LOCAL_CIDR}"

    publicPorts:
      - hostname: qb #hostname assigned to the pod
        IP: 10 # must be an integer between 2 and VXLAN_GATEWAY_FIRST_DYNAMIC_IP (20 by default)
        ports:
          - type: udp
            port: "${VPN_FORWARDED_PORT_1}"
          - type: tcp
            port: "${VPN_FORWARDED_PORT_1}"

    resources:
      requests:
        cpu: 11m
        memory: 22M

    # DNS: 172.16.1.1

    # routed_namespaces:
    #   - downloads

    # publicPorts:
    #   - hostname: qb #hostname assigned to the pod
    #     IP: 10 # must be an integer between 2 and VXLAN_GATEWAY_FIRST_DYNAMIC_IP (20 by default)
    #     ports:
    #       - type: udp
    #         port: ${VPN_FORWARDED_PORT_1}
    #       - type: tcp
    #         port: ${VPN_FORWARDED_PORT_1}

    # settings:
    #   NOT_ROUTED_TO_GATEWAY_CIDRS: "172.16.0.0/12 ${NETWORK_K8S_POD_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${NETWORK_MANAGEMENT_CIDR} ${NETWORK_LOCAL_CIDR}"
    #   # tun0 for openvpn, wg0 for wireguard
    #   VPN_INTERFACE: wg0
    #   VXLAN_ID: 43
    #   VXLAN_IP_NETWORK: 172.16.1
    #   # Prevent non VPN traffic to leave the gateway
    #   VPN_BLOCK_OTHER_TRAFFIC: true
    #   # If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
    #   VPN_TRAFFIC_PORT: ${VPN_PORT}
    #   # Traffic to these IPs will be send through the K8S gateway
    #   # change if your K8S cluster or home network uses a different CIDR
    #   VPN_LOCAL_CIDRS: "172.16.0.0/12 ${NETWORK_K8S_POD_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${NETWORK_MANAGEMENT_CIDR} ${NETWORK_LOCAL_CIDR}"
    #   VXLAN_GATEWAY_FIRST_DYNAMIC_IP: 20

    # webhook:
    #   image:
    #     repository: ghcr.io/k8s-at-home/gateway-admision-controller
    #     tag: v3.6.0

    #   gatewayDefault: false
    #   gatewayLabel: setGateway
    #   gatewayAnnotation: setGateway

    # livenessProbe:
    #   exec:
    #     command:
    #       - sh
    #       - -c
    #       - if [ $(wget -q -O- https://ipinfo.io/country) == '${VPN_COUNTRY}' ]; then exit 0; else exit $?; fi
    #   initialDelaySeconds: 30
    #   periodSeconds: 60
    #   failureThreshold: 1

    #     up: |-
    #       #!/bin/bash
    #       ${SECRET_VPN_CURL}

    #     securityContext:
    #       runAsUser: 568
    #       runAsGroup: 568
    #       capabilities:
    #         drop:
    #           - "SYS_MODULE"

    #     env:
    #       TZ: "${TIMEZONE}"
    #       IPTABLES_BACKEND: nft
    #       KILLSWITCH: "false"

    #     configFileSecret: downloads-gateway-vpnconfig

    # resources:
    #   requests:
    #     cpu: 10m
    #     memory: 64Mi
    #   limits:
    #     memory: 128Mi

    #   egress:
    #     - to:
    #         - ipBlock:
    #             cidr: 0.0.0.0/0
    #       ports:
    #         # VPN traffic port - change if your provider uses a different port
    #         - port: ${VPN_PORT}
    #           protocol: UDP
    #     # - to:
    #     #     # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
    #     #   - ipBlock:
    #     #       cidr: ${NETWORK_K8S_POD_CIDR}
    #     #   - ipBlock:
    #     #       cidr: ${NETWORK_K8S_SERVICE_CIDR}
    #     - to:
    #         - namespaceSelector: {}
