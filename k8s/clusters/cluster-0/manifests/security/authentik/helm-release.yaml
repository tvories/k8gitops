---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  releaseName: authentik
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2024.4.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 1
  upgrade:
    remediation:
      retries: 1
  values:
    global:
      deploymentAnnotations:
        notations:
        secret.reloader.stakater.com/reload: &secret authentik-config
      envFrom:
        - secretRef:
            name: *secret
      env:
        AUTHENTIK_EMAIL__HOST: "${SECRET_SMTP_HOST}"
        AUTHENTIK_EMAIL__PORT: 587
        AUTHENTIK_EMAIL__USE_TLS: "true"
    # controller:
    #   annotations:
    #     secret.reloader.stakater.com/reload: &secret authentik-config
    # serviceAccount:
    #   create: false

    server:
      replicas: 1
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.2
          envFrom:
            - secretRef:
                name: *secret
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 800Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

      ingress:
        enabled: true
        ingressClassName: nginx-external
        annotations:
          nginx.ingress.kubernetes.io/router.entrypoints: websecure
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.org/websocket-services: authentik
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: authentik.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - authentik.${SECRET_DOMAIN}
    worker:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 1200Mi

    authentik:
      log_level: debug
      error_reporting:
        enabled: true
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
    redis:
      enabled: true
      persistence:
        enabled: false
      auth:
        enabled: false

    prometheus:
      serviceMonitor:
        create: true
        interval: 30s
        scrapeTimeout: 3s
      rules:
        create: true
