---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tandoor
  namespace: selfhosted
spec:
  releaseName: tandoor
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 1
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: vabene1111/recipes
      tag: 1.5.13
    env:
      TIMEZONE: "${TIMEZONE}"
      DEBUG: "0"
      ALLOWED_HOSTS: "*"
      # SECRET_KEY: ${SECRET_RECIPES_SECRET_KEY}
      # EMAIL_HOST: ${SECRET_SMTP_HOST}
      EMAIL_PORT: 587
      # EMAIL_HOST_USER: ${SECRET_TVO_EMAIL}
      # EMAIL_HOST_PASSWORD: ${SECRET_RECIPE_EMAIL_PASSWORD}
      EMAIL_USE_TLS: 1
      # EMAIL_USE_SSL: 1
      # DEFAULT_FROM_EMAIL: ${SECRET_RECIPE_EMAIL}
      DB_ENGINE: django.db.backends.postgresql
      ENABLE_SIGNUP: 0
      # POSTGRES_HOST: postgres.database.svc.cluster.local
      # POSTGRES_PORT: "5432"
      # POSTGRES_DB: tandoor
      # POSTGRES_USER: tandoor
      # POSTGRES_PASSWORD: ${TANDOOR_PG_PASSWORD}
      # REVERSE_PROXY_AUTH: 1
      TANDOOR_PORT: 8888
      FRACTION_PREF_DEFAULT: "0"
      COMMENT_PREF_DEFAULT: "1"
      SHOPPING_MIN_AUTOSYNC_INTERVAL: "5"
      GUNICORN_MEDIA: "0"
    envFrom: &envFrom
      - secretRef:
          name: tandoor-secret

    command:
      - /opt/recipes/venv/bin/gunicorn
      - -b
      - :8888
      - --access-logfile
      - "-"
      - --error-logfile
      - "-"
      - --log-level
      - INFO
      - recipes.wsgi

    service:
      main:
        ports:
          http:
            port: &port 8888
          nginx:
            port: &port2 8080

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx-external"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &host "tandoor.${SECRET_DOMAIN}"
            paths:
              - path: /
              - path: /media
                service:
                  port: *port2
              - path: /static
                service:
                  port: *port2
        tls:
          - hosts:
              - *host
            secretName: tls.tandoor

    persistence:
      files:
        enabled: true
        existingClaim: tandoor-files
        mountPath: /opt/recipes/mediafiles
      nginx-config:
        enabled: "true"
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx-config
        type: "custom"
        volumeSpec:
          configMap:
            name: tandoor-configmap
      django-js-reverse:
        enabled: true
        type: emptyDir
        mountPath: /opt/recipes/cookbook/static/django_js_reverse
      static:
        enabled: true
        mountPath: /opt/recipes/staticfiles
        type: emptyDir
      cache:
        enabled: true
        mountPath: /mnt/cache
        type: emptyDir

      # config:
      #   enabled: true
      #   existingClaim: tandoor-config
      # static:
      #   enabled: true
      #   existingClaim: tandoor-static
      # media:
      #   enabled: true
      #   existingClaim: tandoor-media
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:16.2
        imagePullPolicy: IfNotPresent
        envFrom: *envFrom
      02-init-migrate:
        image: vabene1111/recipes:1.5.13
        env:
          - name: DB_ENGINE
            value: django.db.backends.postgresql_psycopg2
          # - name: POSTGRES_HOST
          #   value: postgres.database.svc.cluster.local
          # - name: POSTGRES_PORT
          #   value: "5432"
          # - name: POSTGRES_DB
          #   value: tandoor
        envFrom: *envFrom
        command:
          - sh
          - -c
          - |
            set -e
            source /opt/recipes/venv/bin/activate
            echo "Updating database"
            python3 /opt/recipes/manage.py migrate
            python3 /opt/recipes/manage.py collectstatic_js_reverse
            python3 /opt/recipes/manage.py collectstatic --noinput
        volumeMounts:
          - name: django-js-reverse
            mountPath: /opt/recipes/cookbook/static/django_js_reverse
          - name: static
            mountPath: /opt/recipes/staticfiles
    sidecars:
      nginx:
        image: nginxinc/nginx-unprivileged:1.25.3-alpine
        imagePullPolicy: IfNotPresent
        ports:
          - name: nginx
            containerPort: *port2
        volumeMounts:
          - name: nginx-config
            readOnly: true
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx-config
          - name: files
            mountPath: /media
          - name: static
            mountPath: /static
          - name: cache
            mountPath: /var/cache/nginx

    resources:
      requests:
        cpu: 11m
        memory: 324M
      # limits:
      #   memory: 508M
