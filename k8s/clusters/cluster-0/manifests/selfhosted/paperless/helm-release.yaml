---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: selfhosted
spec:
  interval: 5m
  chart:
    spec:
      chart: paperless
      version: 9.1.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: paperless-secret

    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.17.4

    env:
      TZ: "${TIMEZONE}"
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
      PAPERLESS_REDIS: redis://localhost:6379
      PAPERLESS_TIME_ZONE: "${TIMEZONE}"
      PAPERLESS_DBHOST: postgres.database.svc.cluster.local
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      # PAPERLESS_DBPASS: ${PAPERLESS_PG_PASSWORD}
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      # PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
      USERMAP_GID: 20513
      PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD: 8
      PAPERLESS_ALLOWED_HOSTS: "10.0.0.0/8,192.168.0.0/16,localhost,paperless.${SECRET_DOMAIN}"
      PAPERLESS_WORKER_TIMEOUT: 3600
    envFrom:
      - secretRef:
          name: paperless-secret

    persistence:
      data:
        enabled: true
        existingClaim: paperless-nfs-data
      media:
        enabled: true
        existingClaim: paperless-nfs-media
      consume:
        enabled: true
        existingClaim: paperless-nfs-incoming
      export:
        enabled: true
        existingClaim: paperless-nfs-export

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.paperless
            hosts:
              - *host

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    resources:
      requests:
        cpu: 11m
        memory: 298M
      # limits:
      #   cpu: 1311m
      #   memory: 324M

    additionalContainers:
      - name: broker
        image: redis:7.2
        imagePullPolicy: IfNotPresent
