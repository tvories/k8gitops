{
  // General RenovateBot configuration
  extends: [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>tvories/k8s-gitops//.github/renovate/allowedVersions.json5",
    "github>tvories/k8s-gitops//.github/renovate/autoMerge.json5",
    "github>tvories/k8s-gitops//.github/renovate/commitMessage.json5",
    "github>tvories/k8s-gitops//.github/renovate/groups.json5",
    "github>tvories/k8s-gitops//.github/renovate/labels.json5",
    "github>tvories/k8s-gitops//.github/renovate/semanticCommits.json5",
    "github>tvories/k8s-gitops//.github/renovate/updateSchedule.json5",
  ],
  platform: "github",
  username: "tvories-tbot[bot]",
  repositories: ["tvories/k8s-gitops"],
  onboarding: false,
  requireConfig: false,
  gitAuthor: "tvories-tbot <tvories-tbot@users.noreply.github.com>",
  timezone: "America/Denver",
  dependencyDashboardTitle: "Renovate Dashboard",
  suppressNotifications: ["prIgnoreNotification"],
  commitBodyTable: true,
  rebaseWhen: "conflicted",
  "ignorePaths": [
      "**/examples/**",
      "**/archive/**"
    ],
  // Set up Renovate Managers
  flux: {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  kubernetes: {
    fileMatch: ["kubernetes/.+\\.ya?ml$"],
  },
  regexManagers: [
    {
      description: "Process various dependencies",
      fileMatch: ["k8s/.+\\.ya?ml$"],
      matchStrings: [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*=?))?\n .*: (?<currentValue>.*=?)",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
    {
      description: "Process CRD dependencies - Chart and Github Release are the same version",
      fileMatch: ["kubernetes/.+\\.ya?ml$"],
      matchStrings: [
        "# renovate: registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
      ],
      datasourceTemplate: "helm",
    },
    {
      description: "Generic Docker image Regex manager",
      fileMatch: ["k8s/.+\\.ya?ml$"],
      matchStrings: [
        "# renovate: docker-image( versioning=(?<versioning>.*=?))?\n .*: (?<depName>.*?):(?<currentValue>.*=?)",
      ],
      datasourceTemplate: "docker",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
    {
      description: "Raw GitHub URL Regex manager",
      fileMatch: ["k8s/.+\\.ya?ml$", "kubernetes/.+\\.ya?ml$"],
      matchStrings: [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*",
      ],
      datasourceTemplate: "github-releases",
      versioningTemplate: "semver",
    },
  ],
  packageRules: [
    // Setup datasources
    {
      matchDatasources: ["docker"],
      commitMessageExtra: "to {{newVersion}}",
    },
    // Custom version schemes
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["blakeblackshear/frigate"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["xirixiz/dsmr-reader-docker"],
      versioning: "regex:^(?<compatibility>.*)-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<build>\\d+\\.\\d+\\.\\d+)$",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: [
        "ghcr.io/linuxserver/calibre",
        "ghcr.io/linuxserver/calibre-web",
      ],
      versioning: "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["docker.io/timberio/vector"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
    },
    // Version strategies
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/k8s-at-home/plex"],
      versioning: "loose",
    },
    {
      matchDatasources: ["docker"],
      matchPackageNames: ["tomsquest/docker-radicale"],
      versioning: "pep440",
    },
  ],
}
