---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: benji
  namespace: benji
spec:
  releaseName: benji
  interval: 5m
  chart:
    spec:
      chart: ./charts/benji-k8s
      version: 0.2.0
      sourceRef:
        kind: GitRepository
        name: benji-charts
        namespace: flux-system
      interval: 5m
  values:
    timeZone: ${TIMEZONE}
    benji:
      image:
        registry: ghcr.io
        repository: elemental-lf/benji-k8s
        tag: 0.15.0
        pullPolicy: IfNotPresent
      configuration:
        configurationVersion: '1'
        databaseEngine: postgresql://benji:secret@benji-postgresql-headless:5432/benji
        defaultStorage: storage-1
        storages:
          - name: storage-1
            storageId: 1
            module: file
            configuration:
              path: /backup
        ios:
          - module: rbdaio
            name: ceph-blockpool
            configuration:
              simultaneousReads: 3
              simultaneousWrites: 3
              cephConfigFile: /etc/ceph/ceph.conf
              clientIdentifier: admin
              newImageFeatures:
                - RBD_FEATURE_LAYERING
                - RBD_FEATURE_EXCLUSIVE_LOCK
                - RBD_FEATURE_STRIPINGV2
                - RBD_FEATURE_OBJECT_MAP
                - RBD_FEATURE_FAST_DIFF
                - RBD_FEATURE_DEEP_FLATTEN
      cronJob:
        activeDeadlineSeconds: null
        startingDeadlineSeconds: null
      crontab: {}
      # - name: backup-home
      #   schedule: "00 03 * * *"
      #   command:
      #     - benji-backup-pvc
      #     - --namespace
      #     - home
      # - name: backup-security
      #   schedule: "00 03 * * *"
      #   command:
      #     - benji-backup-pvc
      #     - --namespace
      #     - security
      # - name: backup-media
      #   schedule: "00 03 * * *"
      #   command:
      #     - benji-backup-pvc
      #     - --namespace
      #     - media
      # - name: backup-downloads
      #   schedule: "00 03 * * *"
      #   command:
      #     - benji-backup-pvc
      #     - --namespace
      #     - downloads
      # - name: enforce
      #   schedule: "00 04 * * *"
      #   command:
      #     - benji-command
      #     - enforce
      #     - days14
      #     - 'labels["benji-backup.me/instance"] == "benji-k8s"'
      # - name: cleanup
      #   schedule: "00 05 * * *"
      #   command:
      #     - benji-command
      #     - cleanup
      volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: nfs-backup
        # - name: mon-endpoint-volume
        #   configMap:
        #     name: rook-ceph-mon-endpoints
        #     items:
        #       - key: data
        #         path: mon-endpoints
        - name: ceph-data
          emptyDir: {}
        - name: ceph-config
          configMap:
            name: ceph-config
      volumeMounts:
        - name: backup
          mountPath: /backup
        - name: ceph-data
          mountPath: /etc/ceph
    fsfreeze:
      enabled: true
    postgresql:
      enabled: true
      postgresqlUsername: benji
      postgresqlDatabase: benji
      postgresqlPassword: secret
    pushgateway:
      image:
        registry: docker.io
        repository: prom/pushgateway
        tag: v1.4.2
        pullPolicy: IfNotPresent
      nameOverride: pushgateway
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Deployment
              name: benji-maint
            patch:
              - op: replace
                path: /spec/template/spec/containers/0/volumeMounts
                value:
                  - name: benji-config
                    mountPath: /benji/etc
                  - name: backup
                    mountPath: /backup
                  - name: ceph-data
                    mountPath: /etc/ceph
              - op: add
                path: /spec/template/metadata/annotations
                value:
                  configmap.reloader.stakater.com/reload: "ceph-config"
              - op: add
                path: /spec/template/metadata/annotations
                value:
                  secret.reloader.stakater.com/reload: "rook-ceph-mon"
              - op: add
                path: /spec/template/spec/initContainers
                value:
                  - name: generate-ceph-files
                    image: rook/ceph:v1.7.6
                    imagePullPolicy: Always
                    command: ["/usr/bin/bash"]
                    args:
                      [
                        "-c",
                        "bash /script/generate-ceph.sh",
                      ]
                    volumeMounts:
                      - name: mon-endpoint-volume
                        mountPath: /etc/rook
                      - name: ceph-data
                        mountPath: /etc/ceph
                      - name: ceph-config
                        mountPath: /script/generate-ceph.sh
                        subPath: generate-ceph.sh
                    env:
                      - name: ROOK_CEPH_USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-username
                      - name: ROOK_CEPH_SECRET
                        valueFrom:
                          secretKeyRef:
                            name: rook-ceph-mon
                            key: ceph-secret
          - target:
              kind: DaemonSet
              name: benji-fsfreeze
            patch:
              - op: replace
                path: /spec/template/spec/containers/0/volumeMounts
                value:
                  - name: rbd-mounts
                    mountPath: /var/lib/kubelet/plugins/kubernetes.io/rbd/mounts/
