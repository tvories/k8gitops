---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boobereats
  namespace: web
  labels:
    k8s-app: boobereats
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: boobereats
  template:
    metadata:
      labels:
        k8s-app: boobereats
    spec:
      containers:
      - name: boobereats
        image: tvories/boobereats:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP

# ---
# kind: Service
# apiVersion: v1
# metadata:
#   labels:
#     k8s-app: boobereats
#   name: boobereats
#   namespace: web
# spec:
#   ports:
#     - port: 80
#       targetPort: 80
#   selector:
#     k8s-app: boobereats

# ---
# state: present
# definition:
#   apiVersion: extensions/v1beta1
#   kind: Ingress
#   metadata:
#     name: boobereats-ingress
#     namespace: web
#     annotations:
#       ingress.kubernetes.io/ssl-redirect: "true"
#       kubernetes.io/tls-acme: "true"
#       kubernetes.io/ingress.class: nginx-external
#       cert-manager.io/cluster-issuer: "letsencrypt-production"
#       nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#       nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Real-IP, X-Frame-Options, X-Content-Type-Options, X-Forwarded-Proto"
#       nginx.ingress.kubernetes.io/server-snippet: |
#         error_page 404 "https://taylorvories.com/404.html";
#         proxy_intercept_errors on;
#   spec:
#     tls:
#     - hosts:
#       - taylorvories.com
#       - www.taylorvories.com
#       secretName: boobereats
#     rules:
#     - host: taylorvories.com
#       http:
#         paths:
#         - backend:
#             serviceName: boobereats
#             servicePort: 80
#   status:
#     loadBalancer: {}
